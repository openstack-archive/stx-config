[tox]
envlist = flake8,py27
minversion = 1.6
# skipsdist = True
#,pip-missing-reqs

# tox does not work if the path to the workdir is too long, so move it to /tmp
toxworkdir = /tmp/{env:USER}_sysinvtox
wrsdir = {toxinidir}/../../../../../../../../..
cgcsdir = {toxinidir}/../../../../..
distshare={toxworkdir}/.tox/distshare

[testenv]
# usedevelop = True
# enabling usedevelop results in  py27 develop-inst:
# Exception: Versioning for this project requires either an sdist tarball,
# or access to an upstream git repository.
# WRS Note. site-packages is true and rpm-python must be yum installed on your dev machine.
sitepackages = True

# tox is silly... these need to be separated by a newline....
whitelist_externals = bash
                      find
install_command = pip install -v -v -v -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/pike}  {opts} {packages}
# Note the hash seed is set to 0 until can be tested with a
# random hash seed successfully.
setenv = VIRTUAL_ENV={envdir}
         PYTHONHASHSEED=0
         PYTHONDONTWRITEBYTECODE=1
         OS_TEST_PATH=./sysinv/tests
         LANG=en_US.UTF-8
         LANGUAGE=en_US:en
         LC_ALL=C
         EVENTS_YAML=./sysinv/tests/events_for_testing.yaml
         SYSINV_TEST_ENV=True
         TOX_WORK_DIR={toxworkdir}
         PYLINTHOME={toxworkdir} 
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

commands =
  pip install -e {toxinidir}/../../../../config/recipes-common/tsconfig/tsconfig
  pip install -e {toxinidir}/../../../../config/recipes-control/configutilities/configutilities
  pip install -e {toxinidir}/../../../../fault/recipes-common/fm-api
  pip install -e {toxinidir}/../../../../config/recipes-control/controllerconfig/controllerconfig
  pip install -e {toxinidir}/../../../../patching/recipes-common/cgcs-patch/cgcs-patch
  pip install -e {toxinidir}/../../../../util/recipes-common/platform-util/platform-util

  find . -type f -name "*.pyc" -delete
#  bash tools/pretty_tox.sh '{posargs}'
  python tools/patch_tox_venv.py
  py.test {posargs}
# python setup.py testr --slowest --testr-args='{posargs}'

# TODO: remove ignore E722 when issue 8174 is resolved
# H101 is TODO
# H102 is apache license
# H104 file contains only comments (ie: license)
# H105 author tags
# H231..H238 are python3 compatability
# H401,H403,H404,H405 are docstring and not important
[flake8]
ignore = F403,F401,F821,F841,E501,E127,E128,E231,E266,E402,E711,E116,E203,E731,E712,E713,E702,E714,E126,E121,E722,H101,H102,H104,H105,H231,H232,H233,H234,H235,H236,H237,H238,H401,H403,H404,H405


# [tox:jenkins]
# downloadcache = ~/cache/pip

[testenv:flake8]
basepython = python2.7
deps = flake8
commands = flake8 {posargs}


[testenv:py27]
basepython = python2.7
#       -r{toxinidir}/test-requirements.txt

[testenv:pep8]
commands =
  flake8 {posargs}

[testenv:venv]
commands = {posargs}

[testenv:pylint]
basepython = python2.7

deps = {[testenv]deps}
       -e{[tox]cgcsdir}/middleware/config/recipes-common/tsconfig/tsconfig
       -e{[tox]cgcsdir}/middleware/config/recipes-control/configutilities/configutilities
       -e{[tox]cgcsdir}/middleware/fault/recipes-common/fm-api
       -e{[tox]cgcsdir}/middleware/config/recipes-control/controllerconfig/controllerconfig
       -e{[tox]cgcsdir}/middleware/patching/recipes-common/cgcs-patch/cgcs-patch
       -e{[tox]cgcsdir}/middleware/util/recipes-common/platform-util/platform-util
       -e{[tox]cgcsdir}/middleware/sysinv/recipes-common/cgts-client/cgts-client
        pylint
commands = pylint {posargs} sysinv --rcfile=./pylint.rc  --extension-pkg-whitelist=lxml.etree,greenlet

[testenv:cover]
basepython = python2.7
deps = {[testenv]deps}
       -e{[tox]cgcsdir}/middleware/config/recipes-common/tsconfig/tsconfig
       -e{[tox]cgcsdir}/middleware/config/recipes-control/configutilities/configutilities
       -e{[tox]cgcsdir}/middleware/fault/recipes-common/fm-api
       -e{[tox]cgcsdir}/middleware/config/recipes-control/controllerconfig/controllerconfig
       -e{[tox]cgcsdir}/middleware/patching/recipes-common/cgcs-patch/cgcs-patch
       -e{[tox]cgcsdir}/middleware/util/recipes-common/platform-util/platform-util

commands =
  find . -type f -name "*.pyc" -delete
  find . -type f -name ".coverage\.*" -delete
  coverage erase
  python tools/patch_tox_venv.py
  python setup.py testr --coverage --testr-args='{posargs}'
  coverage xml

[testenv:pip-missing-reqs]
# do not install test-requirements as that will pollute the virtualenv for
# determining missing packages
# this also means that pip-missing-reqs must be installed separately, outside
# of the requirements.txt files
deps = pip_missing_reqs
       -rrequirements.txt
commands=pip-missing-reqs -d --ignore-file=/sysinv/tests sysinv
