The expected layout for this subdirectory is as follows:

kubernetes
|-- applications
|   `-- <application>
|       `-- <application>-helm RPM
|           `-- centos
|               `-- build_srpm.data
|               `-- <application>-helm.spec
|           `-- <application>-helm
|               `-- manifests
|                   `-- main-manifest.yaml
|                   `-- alt-manifest-1.yaml
|                   `-- ...
|                   `-- alt-manifest-N.yaml
|               `-- custom chart 1
|                   `-- Chart.yaml
|                   `-- ...
|               `-- ...
|               `-- custom chart N
|                   `-- Chart.yaml
|                   `-- ...
|-- helm-charts
|   `-- chart
|       `-- chart
`-- README

The idea is that all our custom helm charts that are common across applications
would go under "helm-charts". Each chart would get a subdirectory.

Custom applications would generally consist of one or more armada manifest
referencing multiple helm charts (both ours and upstream ones). The application
is packaged as an RPM. These application RPM are used to produce the build
artifacts (helm tarballs + armada manifests) but are not installed on the
system. These artifacts are extracted later for proper application packaging
with additional required metadata (TBD).

These applications would each get their own subdirectory under
"applications".


=====
Notes on Upversioning Calico.
(Current version v3.6)
Refer to configuration instructions here:
https://docs.projectcalico.org/v3.6/getting-started/kubernetes/installation/calico

It is important to test in a multi-controller environment (ie: AIO-DX)  that the
pods can be pinged by their endpoint.  So a pod running on controller-1 can be pinged
from controller-0, and vica versa.

An additional test (run on controller-0)

curl -O -L https://github.com/projectcalico/calicoctl/releases/download/v3.6.1/calicoctl
chmod +x calicoctl
sudo mv calicoctl /usr/local/bin
export DATASTORE_TYPE=kubernetes
# query daemon health/status
sudo calicoctl node status



